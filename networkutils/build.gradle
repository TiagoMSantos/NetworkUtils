plugins {
    id 'com.android.library'
    id 'io.gitlab.arturbosch.detekt' version '1.5.1'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'maven-publish'
}

android {
    compileSdkVersion versions.compileSdk

    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        renderscriptSupportModeEnabled true
        vectorDrawables.useSupportLibrary true

    }

    buildFeatures {
        dataBinding = true
        viewBinding true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

apply from: 'publish.gradle'
apply from: 'ktlint.gradle'
apply from: 'detekt.gradle'

dependencies {
    /* Ktlint */
    ktlint "com.pinterest:ktlint:$versions.ktlint"

    api "org.jetbrains.kotlin:kotlin-stdlib:$versions.kotlin"
    api "org.jetbrains.kotlin:kotlin-reflect:$versions.kotlin"

    api "androidx.appcompat:appcompat:$versions.appCompat"

    /* Multidex */
    api "androidx.multidex:multidex:$versions.multidex"

//    detekt("io.gitlab.arturbosch.detekt:detekt-formatting:$versions.detekt")
//    detekt("io.gitlab.arturbosch.detekt:detekt-cli:$versions.detekt")

    /* Koin */
    api "org.koin:koin-androidx-fragment:$versions.koin"
    api "org.koin:koin-androidx-viewmodel:$versions.koin"
    api "org.koin:koin-androidx-scope:$versions.koin"
    api "org.koin:koin-core:$versions.koin"

    /* Coroutines */
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"

    /* RX */
    api "io.reactivex.rxjava3:rxandroid:$versions.rxAndroid"
    api "io.reactivex.rxjava3:rxjava:$versions.rxJava"
    api "io.reactivex.rxjava3:rxkotlin:$versions.rxKotlin"

    /* Firebase */
    api("com.google.firebase:firebase-analytics-ktx:$versions.firebaseAnalytics") {
        exclude group: 'com.android.support'
    }
    api("com.google.firebase:firebase-crashlytics:$versions.firebaseCrashlytics") {
        exclude group: 'com.android.support'
    }
    api("com.google.firebase:firebase-config-ktx:$versions.firebaseRemoteConfig") {
        exclude group: 'com.android.support'
    }

    /* Request */
    api "com.google.code.gson:gson:$versions.gson"
    api "com.squareup.retrofit2:adapter-rxjava2:$versions.rxAdapter"
    api "com.squareup.retrofit2:converter-gson:$versions.retrofit"
    api "com.squareup.retrofit2:converter-moshi:$versions.retrofit"
    api "com.squareup.retrofit2:retrofit:$versions.retrofit"
    api "com.squareup.okhttp3:logging-interceptor:$versions.okhttpLogging"
    api "com.squareup.okhttp3:okhttp:$versions.okhttp"

    /* ROOM */
    api "androidx.room:room-runtime:$versions.room"
    api "androidx.room:room-ktx:$versions.room"
    kapt "androidx.room:room-compiler:$versions.room"

    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}